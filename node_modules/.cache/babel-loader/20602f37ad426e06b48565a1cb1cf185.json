{"ast":null,"code":"import _slicedToArray from \"/Users/guokai/Desktop/React-connect/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/guokai/Desktop/React-connect/src/Prism/Okadia/index.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\nimport marked from \"marked\"; // import highlight from \"highlight.js\";\n\nimport \"./Okadia.css\"; // highlight.configure({\n//   tabReplace: \"  \",\n//   classPrefix: \"hljs-\",\n//   languages: [\n//     \"CSS\",\n//     \"HTML, XML\",\n//     \"JavaScript\",\n//     \"PHP\",\n//     \"Python\",\n//     \"Stylus\",\n//     \"TypeScript\",\n//     \"Markdown\"\n//   ]\n// });\n// marked.setOptions({\n//   highlight(code) {\n//     return highlight.highlightAuto(code).value;\n//   }\n// });\n\nfunction App() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        dataType = _useState2[0],\n        setDataType = _useState2[1];\n\n  const _useState3 = useState( // `import react from \"react\"\n  //   123 eede\n  // `\n  ``),\n        _useState4 = _slicedToArray(_useState3, 2),\n        previewContent = _useState4[0],\n        setPreviewContent = _useState4[1];\n\n  const handleChange = e => {\n    // var x = document.getElementById(\"myInput\").value;\n    console.log(`${e.target.value}`);\n    setPreviewContent(`${e.target.value}`); // setPreviewContent(marked(x));\n  };\n\n  const handleChangeTypeJS = () => {\n    setDataType(`js`);\n  };\n\n  const handleChangeTypeCSS = () => {\n    setDataType(`css`);\n  };\n\n  const handleChangeTypeC = () => {\n    setDataType(\"c\");\n  };\n\n  useEffect(() => {\n    Prism.highlightAll();\n  });\n  const html = `\n    <div>\n      <ul>\n        <li>1</li>\n      </ul>\n    </div>\n  `;\n  const js = `\nconst getLoader = require('prismjs/dependencies');\nconst components = require('prismjs/components');\nconst componentsToLoad = ['markup', 'css', 'php'];\nconst loadedComponents = ['clike', 'javascript'];\nconst loader = getLoader(components, componentsToLoad, loadedComponents);\n  `;\n  return React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handleChangeTypeJS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"JavaScript\"), React.createElement(\"button\", {\n    onClick: handleChangeTypeCSS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"CSS\"), React.createElement(\"button\", {\n    onClick: handleChangeTypeC,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"C++\"))), React.createElement(\"textarea\", {\n    // rows=\"2\"\n    // cols=\"3\"\n    value: previewContent,\n    placeholder: \"\\u8F93\\u5165\\u4EE3\\u7801...\",\n    type: \"text\",\n    onChange: handleChange,\n    style: {\n      width: \"500px\",\n      height: \"100%\",\n      backgroundColor: \"#f8f8f2\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      width: \"500px\" // height: \"100%\",\n      // backgroundColor: \"pink\"\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"\\u6B63\\u5E38\\u7ED3\\u679C\\u533A:\"), previewContent)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"\\u4EE3\\u7801\\u533A:\", dataType), React.createElement(\"pre\", {\n    className: \"line-numbers\",\n    style: {\n      width: 500,\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    className: \"language-js\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: previewContent\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: marked(`${previewContent}`)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), previewContent)), React.createElement(\"pre\", {\n    className: \"line-numbers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    className: \"language-js\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, js.trim()), React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    class: \"language-css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, `p { color: red }`)))));\n}\n\nsetTimeout(() => Prism.highlightAll(), 0);\nexport default App;","map":{"version":3,"sources":["/Users/guokai/Desktop/React-connect/src/Prism/Okadia/index.jsx"],"names":["React","useState","useEffect","Prism","marked","App","dataType","setDataType","previewContent","setPreviewContent","handleChange","e","console","log","target","value","handleChangeTypeJS","handleChangeTypeCSS","handleChangeTypeC","highlightAll","html","js","display","width","height","backgroundColor","__html","trim","setTimeout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\nimport marked from \"marked\";\n// import highlight from \"highlight.js\";\nimport \"./Okadia.css\";\n\n// highlight.configure({\n//   tabReplace: \"  \",\n//   classPrefix: \"hljs-\",\n//   languages: [\n//     \"CSS\",\n//     \"HTML, XML\",\n//     \"JavaScript\",\n//     \"PHP\",\n//     \"Python\",\n//     \"Stylus\",\n//     \"TypeScript\",\n//     \"Markdown\"\n//   ]\n// });\n// marked.setOptions({\n//   highlight(code) {\n//     return highlight.highlightAuto(code).value;\n//   }\n// });\n\nfunction App() {\n  const [dataType, setDataType] = useState(\"\");\n  const [previewContent, setPreviewContent] = useState(\n    // `import react from \"react\"\n    //   123 eede\n    // `\n    ``\n  );\n\n  const handleChange = e => {\n    // var x = document.getElementById(\"myInput\").value;\n    console.log(`${e.target.value}`);\n    setPreviewContent(`${e.target.value}`);\n    // setPreviewContent(marked(x));\n  };\n  const handleChangeTypeJS = () => {\n    setDataType(`js`);\n  };\n  const handleChangeTypeCSS = () => {\n    setDataType(`css`);\n  };\n  const handleChangeTypeC = () => {\n    setDataType(\"c\");\n  };\n  useEffect(() => {\n    Prism.highlightAll();\n  });\n\n  const html = `\n    <div>\n      <ul>\n        <li>1</li>\n      </ul>\n    </div>\n  `;\n  const js = `\nconst getLoader = require('prismjs/dependencies');\nconst components = require('prismjs/components');\nconst componentsToLoad = ['markup', 'css', 'php'];\nconst loadedComponents = ['clike', 'javascript'];\nconst loader = getLoader(components, componentsToLoad, loadedComponents);\n  `;\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      {/* -----------------代码input区------------------ */}\n      <div>\n        <div>\n          <ul>\n            <button onClick={handleChangeTypeJS}>JavaScript</button>\n            <button onClick={handleChangeTypeCSS}>CSS</button>\n            <button onClick={handleChangeTypeC}>C++</button>\n          </ul>\n        </div>\n\n        {/* <div\n          type=\"input\"\n          id=\"myInput\"\n          style={{\n            width: \"500px\",\n            height: \"100%\",\n            backgroundColor: \"#f8f8f2\"\n          }}\n          onInput={handleChange}\n          dangerouslySetInnerHTML={{ __html: previewContent }}\n        /> */}\n\n        <textarea\n          // rows=\"2\"\n          // cols=\"3\"\n          value={previewContent}\n          placeholder=\"输入代码...\"\n          type=\"text\"\n          onChange={handleChange}\n          style={{\n            width: \"500px\",\n            height: \"100%\",\n            backgroundColor: \"#f8f8f2\"\n          }}\n        />\n        <div\n          style={{\n            width: \"500px\"\n            // height: \"100%\",\n            // backgroundColor: \"pink\"\n          }}\n        >\n          <div>正常结果区:</div>\n          {previewContent}\n        </div>\n      </div>\n      {/* -----------------代码view区------------------ */}\n      <div>\n        <ul>代码区:{dataType}</ul>\n        <pre className=\"line-numbers\" style={{ width: 500, height: \"100%\" }}>\n          <code className=\"language-js\">\n            <div dangerouslySetInnerHTML={{ __html: previewContent }}></div>\n            <div\n              dangerouslySetInnerHTML={{\n                __html: marked(`${previewContent}`)\n              }}\n            ></div>\n            {/* <code className=\"language-html line-numbers\">{html.trim()}</code> */}\n\n            {previewContent}\n          </code>\n        </pre>\n        <pre className=\"line-numbers\">\n          {/* trim() 去掉两端多余空格 */}\n          <code className=\"language-js\">{js.trim()}</code>\n          <pre>\n            <code class=\"language-css\">{`p { color: red }`}</code>\n          </pre>\n        </pre>\n      </div>\n      {/* {\n        (() => {\n          setTimeout(() => Prism.highlightAll(), 0);\n        },\n        [])\n      } */}\n    </div>\n  );\n}\nsetTimeout(() => Prism.highlightAll(), 0);\nexport default App;\n"]},"metadata":{},"sourceType":"module"}