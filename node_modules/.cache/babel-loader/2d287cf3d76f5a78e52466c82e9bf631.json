{"ast":null,"code":"import _slicedToArray from \"/Users/guokai/Desktop/React-connect/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/guokai/Desktop/React-connect/src/App.js\";\nimport React, { useState } from \"react\"; // import Solarized from \"./Prism/Solarized/Solarized\";\n// import Input from \"./Prism/Input\";\n\nimport Okadia from \"./Prism/Okadia/Okadia.jsx\";\n\nfunction App() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        dataType = _useState4[0],\n        setDataType = _useState4[1];\n\n  const _useState5 = useState(`import react from \"react\"`),\n        _useState6 = _slicedToArray(_useState5, 2),\n        previewContent = _useState6[0],\n        setPreviewContent = _useState6[1];\n\n  const handleChange = e => {\n    console.log(e.target.value);\n    setPreviewContent(e.target.value);\n  };\n\n  const handleChangeTypeJS = () => {\n    setDataType(`js`);\n  };\n\n  const handleChangeTypeCSS = () => {\n    setDataType(`css`);\n  };\n\n  const handleChangeTypeC = () => {\n    setDataType(\"c\");\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handleChangeTypeJS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"JavaScript\"), React.createElement(\"button\", {\n    onClick: handleChangeTypeCSS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"CSS\"), React.createElement(\"button\", {\n    onClick: handleChangeTypeC,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"C++\"))), React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: previewContent\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    value: data,\n    placeholder: \"\\u8F93\\u5165\\u4EE3\\u7801...\",\n    onChange: handleChange,\n    style: {\n      width: \"500px\",\n      height: \"100%\",\n      backgroundColor: \"#f8f8f2\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(Okadia, {\n    data: previewContent,\n    dataType: dataType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/guokai/Desktop/React-connect/src/App.js"],"names":["React","useState","Okadia","App","data","setData","dataType","setDataType","previewContent","setPreviewContent","handleChange","e","console","log","target","value","handleChangeTypeJS","handleChangeTypeCSS","handleChangeTypeC","display","__html","width","height","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACWF,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,QACNG,IADM;AAAA,QACAC,OADA;;AAAA,qBAEmBJ,QAAQ,CAAC,EAAD,CAF3B;AAAA;AAAA,QAENK,QAFM;AAAA,QAEIC,WAFJ;;AAAA,qBAG+BN,QAAQ,CACjD,2BADiD,CAHvC;AAAA;AAAA,QAGNO,cAHM;AAAA,QAGUC,iBAHV;;AAOb,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;AACAN,IAAAA,iBAAiB,CAACE,CAAC,CAACG,MAAF,CAASC,KAAV,CAAjB;AACD,GAHD;;AAIA,QAAMC,kBAAkB,GAAG,MAAM;AAC/BT,IAAAA,WAAW,CAAE,IAAF,CAAX;AACD,GAFD;;AAGA,QAAMU,mBAAmB,GAAG,MAAM;AAChCV,IAAAA,WAAW,CAAE,KAAF,CAAX;AACD,GAFD;;AAGA,QAAMW,iBAAiB,GAAG,MAAM;AAC9BX,IAAAA,WAAW,CAAC,GAAD,CAAX;AACD,GAFD;;AAGA,SACE;AAAK,IAAA,KAAK,EAAE;AAAEY,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEH,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAQ,IAAA,OAAO,EAAEC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAGE;AAAQ,IAAA,OAAO,EAAEC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,CADF,CADF,EAQE;AAAK,IAAA,uBAAuB,EAAE;AAAEE,MAAAA,MAAM,EAAEZ;AAAV,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE;AACE,IAAA,KAAK,EAAEJ,IADT;AAEE,IAAA,WAAW,EAAC,6BAFd;AAGE,IAAA,QAAQ,EAAEM,YAHZ;AAIE,IAAA,KAAK,EAAE;AACLW,MAAAA,KAAK,EAAE,OADF;AAELC,MAAAA,MAAM,EAAE,MAFH;AAGLC,MAAAA,eAAe,EAAE;AAHZ,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,EAqBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEf,cAAd;AAA8B,IAAA,QAAQ,EAAEF,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CADF;AAyBD;;AACD,eAAeH,GAAf","sourcesContent":["import React, { useState } from \"react\";\n// import Solarized from \"./Prism/Solarized/Solarized\";\n// import Input from \"./Prism/Input\";\nimport Okadia from \"./Prism/Okadia/Okadia.jsx\";\n\nfunction App() {\n  const [data, setData] = useState(\"\");\n  const [dataType, setDataType] = useState(\"\");\n  const [previewContent, setPreviewContent] = useState(\n    `import react from \"react\"`\n  );\n\n  const handleChange = e => {\n    console.log(e.target.value);\n    setPreviewContent(e.target.value);\n  };\n  const handleChangeTypeJS = () => {\n    setDataType(`js`);\n  };\n  const handleChangeTypeCSS = () => {\n    setDataType(`css`);\n  };\n  const handleChangeTypeC = () => {\n    setDataType(\"c\");\n  };\n  return (\n    <div style={{ display: \"flex\" }}>\n      <div>\n        <div>\n          <ul>\n            <button onClick={handleChangeTypeJS}>JavaScript</button>\n            <button onClick={handleChangeTypeCSS}>CSS</button>\n            <button onClick={handleChangeTypeC}>C++</button>\n          </ul>\n        </div>\n        <div dangerouslySetInnerHTML={{ __html: previewContent }}></div>\n        <input\n          value={data}\n          placeholder=\"输入代码...\"\n          onChange={handleChange}\n          style={{\n            width: \"500px\",\n            height: \"100%\",\n            backgroundColor: \"#f8f8f2\"\n          }}\n        ></input>\n      </div>\n      <Okadia data={previewContent} dataType={dataType} />\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}