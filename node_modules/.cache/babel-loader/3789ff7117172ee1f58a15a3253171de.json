{"ast":null,"code":"import _slicedToArray from \"/Users/guokai/Desktop/React-connect/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/guokai/Desktop/React-connect/src/Prism/Okadia/index.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\nimport \"../CodeTheme/Okadia.css\"; // import \"../CodeTheme/Solarized.css\";\n\nfunction App() {\n  const _useState = useState(\"js\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        dataType = _useState2[0],\n        setDataType = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        previewContent = _useState4[0],\n        setPreviewContent = _useState4[1]; // const [newContent, setnewContent] = useState(\"\");\n\n\n  const handleChange = e => {\n    console.log(e);\n    setPreviewContent(`${e.target.value}`);\n  };\n\n  const newhandleChange = e => {\n    console.log(e); // setPreviewContent(`${e.target.value}`);\n  };\n\n  const handleChangeTypeJS = () => {\n    setDataType(`js`);\n  };\n\n  const handleChangeTypeCSS = () => {\n    setDataType(`css`);\n  };\n\n  const handleChangeTypeC = () => {\n    setDataType(\"c\");\n  };\n\n  useEffect(() => {\n    setTimeout(() => Prism.highlightAll(), 0);\n  });\n\n  const handleSelectChange = e => {\n    setDataType(`${e.target.value}`);\n  };\n\n  const js = `\nconst getLoader = require('prismjs/dependencies');\nconst components = require('prismjs/components');\nconst componentsToLoad = ['markup', 'css', 'php'];\nconst loadedComponents = ['clike', 'javascript'];\nconst loader = getLoader(components, componentsToLoad, loadedComponents);\n  `; // function View() {\n  //   return (\n  //     <div style={{ width: 500, height: 600 }}>\n  //       <pre className=\"line-numbers\" style={{ width: 500, height: 600 }}>\n  //         <code className={`language-${dataType}`}>{previewContent}</code>\n  //       </pre>\n  //     </div>\n  //   );\n  // }\n\n  return React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handleChangeTypeJS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"JavaScript\"), React.createElement(\"button\", {\n    onClick: handleChangeTypeCSS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"CSS\"), React.createElement(\"button\", {\n    onClick: handleChangeTypeC,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"C++\"), \"\\xA0 \\u2002 \\u2003 \\u2002 \\u2003 \\xA0 \\u2002 \\u2003\", React.createElement(\"select\", {\n    name: \"type\",\n    onChange: handleSelectChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"js\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"JavaScript\"), React.createElement(\"option\", {\n    value: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"CSS\"), React.createElement(\"option\", {\n    value: \"c++\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"C++\")))), React.createElement(\"textarea\", {\n    value: previewContent,\n    placeholder: \"\\u8F93\\u5165\\u4EE3\\u7801...\",\n    type: \"text\",\n    onChange: handleChange,\n    style: {\n      width: \"500px\",\n      height: \"100%\",\n      backgroundColor: \"#f8f8f2\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      width: \"500px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"\\u6B63\\u5E38\\u7ED3\\u679C\\u533A:\"), previewContent)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"\\u4EE3\\u7801\\u533A:\", dataType), React.createElement(\"div\", {\n    style: {\n      width: 500,\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"pre\", {\n    contentEditable: \"true\",\n    onChange: newhandleChange,\n    value: previewContent,\n    className: \"line-numbers\",\n    style: {\n      width: 500,\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    className: `language-${dataType}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, previewContent))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"pre\", {\n    className: \"line-numbers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    className: \"language-js\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, js.trim())), React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    className: \"language-css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, `p { color: red }`)))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/guokai/Desktop/React-connect/src/Prism/Okadia/index.jsx"],"names":["React","useState","useEffect","Prism","App","dataType","setDataType","previewContent","setPreviewContent","handleChange","e","console","log","target","value","newhandleChange","handleChangeTypeJS","handleChangeTypeCSS","handleChangeTypeC","setTimeout","highlightAll","handleSelectChange","js","display","width","height","backgroundColor","trim"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\nimport \"../CodeTheme/Okadia.css\";\n// import \"../CodeTheme/Solarized.css\";\n\nfunction App() {\n  const [dataType, setDataType] = useState(\"js\");\n  const [previewContent, setPreviewContent] = useState(\"\");\n  // const [newContent, setnewContent] = useState(\"\");\n\n  const handleChange = e => {\n    console.log(e);\n    setPreviewContent(`${e.target.value}`);\n  };\n  const newhandleChange = e => {\n    console.log(e);\n    // setPreviewContent(`${e.target.value}`);\n  };\n  const handleChangeTypeJS = () => {\n    setDataType(`js`);\n  };\n  const handleChangeTypeCSS = () => {\n    setDataType(`css`);\n  };\n  const handleChangeTypeC = () => {\n    setDataType(\"c\");\n  };\n  useEffect(() => {\n    setTimeout(() => Prism.highlightAll(), 0);\n  });\n  const handleSelectChange = e => {\n    setDataType(`${e.target.value}`);\n  };\n\n  const js = `\nconst getLoader = require('prismjs/dependencies');\nconst components = require('prismjs/components');\nconst componentsToLoad = ['markup', 'css', 'php'];\nconst loadedComponents = ['clike', 'javascript'];\nconst loader = getLoader(components, componentsToLoad, loadedComponents);\n  `;\n  // function View() {\n  //   return (\n  //     <div style={{ width: 500, height: 600 }}>\n  //       <pre className=\"line-numbers\" style={{ width: 500, height: 600 }}>\n  //         <code className={`language-${dataType}`}>{previewContent}</code>\n  //       </pre>\n  //     </div>\n  //   );\n  // }\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      {/* -----------------代码input区------------------ */}\n      <div>\n        <div>\n          <ul>\n            <button onClick={handleChangeTypeJS}>JavaScript</button>\n            <button onClick={handleChangeTypeCSS}>CSS</button>\n            <button onClick={handleChangeTypeC}>C++</button>\n            &nbsp; &ensp; &emsp; &ensp; &emsp; &nbsp; &ensp; &emsp;\n            <select name=\"type\" onChange={handleSelectChange}>\n              <option value=\"js\">JavaScript</option>\n              <option value=\"css\">CSS</option>\n              <option value=\"c++\">C++</option>\n            </select>\n          </ul>\n        </div>\n        <textarea\n          value={previewContent}\n          placeholder=\"输入代码...\"\n          type=\"text\"\n          onChange={handleChange}\n          style={{\n            width: \"500px\",\n            height: \"100%\",\n            backgroundColor: \"#f8f8f2\"\n          }}\n        />\n        <div\n          style={{\n            width: \"500px\"\n          }}\n        >\n          <div>正常结果区:</div>\n          {previewContent}\n        </div>\n      </div>\n      {/* -----------------代码view区------------------ */}\n      <div>\n        <ul>代码区:{dataType}</ul>\n        <div style={{ width: 500, height: \"100%\" }}>\n          <pre\n            contentEditable=\"true\"\n            onChange={newhandleChange}\n            value={previewContent}\n            className=\"line-numbers\"\n            style={{ width: 500, height: \"100%\" }}\n          >\n            <code className={`language-${dataType}`}>{previewContent}</code>\n          </pre>\n        </div>\n        <div>\n          <pre className=\"line-numbers\">\n            <code className=\"language-js\">{js.trim()}</code>\n          </pre>\n          <pre>\n            <code className=\"language-css\">{`p { color: red }`}</code>\n          </pre>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}