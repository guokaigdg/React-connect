{"ast":null,"code":"import _slicedToArray from \"/Users/guokai/Desktop/React-connect/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/guokai/Desktop/React-connect/src/Prism/Okadia/index1.2.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\nimport \"../CodeTheme/Okadia.css\"; // import \"../CodeTheme/Solarized.css\";\n\nfunction App() {\n  const _useState = useState(\"js\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        dataType = _useState2[0],\n        setDataType = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        previewContent = _useState4[0],\n        setPreviewContent = _useState4[1]; // const [newContent, setnewContent] = useState(\"\");\n\n\n  const handleChange = e => {\n    console.log(e);\n    setPreviewContent(`${e.target.value}`);\n  };\n\n  const newhandleChange = e => {\n    // let element = document.getElementById(\"editableDiv\");\n    // let x = document.getElementById(\"editableDiv\").isContentEditable;\n    // console.log(element.innerHTML);\n    console.log(e.target.innerText); // console.log(x);\n\n    setPreviewContent(e.target.innerText);\n  };\n\n  const handleChangeTypeJS = () => {\n    setDataType(`js`);\n  };\n\n  const handleChangeTypeCSS = () => {\n    setDataType(`css`);\n  };\n\n  const handleChangeTypeC = () => {\n    setDataType(\"c\");\n  };\n\n  useEffect(() => {\n    // setTimeout(() => Prism.highlightAll(), 0);\n    Prism.highlightAll();\n  });\n\n  const handleSelectChange = e => {\n    setDataType(`${e.target.value}`);\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handleChangeTypeJS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"JavaScript\"), React.createElement(\"button\", {\n    onClick: handleChangeTypeCSS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"CSS\"), React.createElement(\"button\", {\n    onClick: handleChangeTypeC,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"C++\"), \"\\xA0 \\u2002 \\u2003 \\u2002 \\u2003 \\xA0 \\u2002 \\u2003\", React.createElement(\"select\", {\n    name: \"type\",\n    onChange: handleSelectChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"js\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"JavaScript\"), React.createElement(\"option\", {\n    value: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"CSS\"), React.createElement(\"option\", {\n    value: \"c++\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"C++\")))), React.createElement(\"textarea\", {\n    value: previewContent,\n    placeholder: \"\\u8F93\\u5165\\u4EE3\\u7801...\",\n    type: \"text\",\n    onChange: handleChange,\n    style: {\n      width: \"500px\",\n      height: \"100%\",\n      backgroundColor: \"#f8f8f2\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      width: \"500px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"\\u6B63\\u5E38\\u7ED3\\u679C\\u533A:\"), previewContent)), React.createElement(\"button\", {\n    onClick: newhandleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"click\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"\\u4EE3\\u7801\\u533A:\", dataType), React.createElement(\"div\", {\n    style: {\n      width: 500,\n      height: 400\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"pre\", {\n    // contentEditable=\"true\"\n    contentEditable: \"plaintext-only\",\n    id: \"editableDiv\",\n    onInput: newhandleChange // onChange={newhandleChange}\n    ,\n    value: previewContent,\n    style: {\n      width: 500,\n      height: 400\n    } // dangerouslySetInnerHTML={{ __html: previewContent }}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    className: `language-${dataType}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, previewContent)))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/guokai/Desktop/React-connect/src/Prism/Okadia/index1.2.jsx"],"names":["React","useState","useEffect","Prism","App","dataType","setDataType","previewContent","setPreviewContent","handleChange","e","console","log","target","value","newhandleChange","innerText","handleChangeTypeJS","handleChangeTypeCSS","handleChangeTypeC","highlightAll","handleSelectChange","display","width","height","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\nimport \"../CodeTheme/Okadia.css\";\n// import \"../CodeTheme/Solarized.css\";\n\nfunction App() {\n  const [dataType, setDataType] = useState(\"js\");\n  const [previewContent, setPreviewContent] = useState(\"\");\n  // const [newContent, setnewContent] = useState(\"\");\n\n  const handleChange = e => {\n    console.log(e);\n    setPreviewContent(`${e.target.value}`);\n  };\n  const newhandleChange = e => {\n    // let element = document.getElementById(\"editableDiv\");\n    // let x = document.getElementById(\"editableDiv\").isContentEditable;\n    // console.log(element.innerHTML);\n    console.log(e.target.innerText);\n    // console.log(x);\n    setPreviewContent(e.target.innerText);\n  };\n  const handleChangeTypeJS = () => {\n    setDataType(`js`);\n  };\n  const handleChangeTypeCSS = () => {\n    setDataType(`css`);\n  };\n  const handleChangeTypeC = () => {\n    setDataType(\"c\");\n  };\n  useEffect(() => {\n    // setTimeout(() => Prism.highlightAll(), 0);\n    Prism.highlightAll();\n  });\n  const handleSelectChange = e => {\n    setDataType(`${e.target.value}`);\n  };\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      {/* -----------------代码input区------------------ */}\n      <div>\n        <div>\n          <ul>\n            <button onClick={handleChangeTypeJS}>JavaScript</button>\n            <button onClick={handleChangeTypeCSS}>CSS</button>\n            <button onClick={handleChangeTypeC}>C++</button>\n            &nbsp; &ensp; &emsp; &ensp; &emsp; &nbsp; &ensp; &emsp;\n            <select name=\"type\" onChange={handleSelectChange}>\n              <option value=\"js\">JavaScript</option>\n              <option value=\"css\">CSS</option>\n              <option value=\"c++\">C++</option>\n            </select>\n          </ul>\n        </div>\n        <textarea\n          value={previewContent}\n          placeholder=\"输入代码...\"\n          type=\"text\"\n          onChange={handleChange}\n          style={{\n            width: \"500px\",\n            height: \"100%\",\n            backgroundColor: \"#f8f8f2\"\n          }}\n        />\n        <div\n          style={{\n            width: \"500px\"\n          }}\n        >\n          <div>正常结果区:</div>\n          {previewContent}\n        </div>\n      </div>\n      {/* -----------------代码view区------------------ */}\n      <button onClick={newhandleChange}>click</button>\n      <div>\n        <ul>代码区:{dataType}</ul>\n        {/* <div\n          contentEditable=\"plaintext-only\"\n          id=\"editableDiv\"\n          //  onInput={newhandleChange}\n          onChange={newhandleChange}\n          value={previewContent}\n          style={{\n            width: 500,\n            height: 200,\n            borderColor: \"pink\"\n          }}\n        ></div> */}\n        <div style={{ width: 500, height: 400 }}>\n          <pre\n            // contentEditable=\"true\"\n            contentEditable=\"plaintext-only\"\n            id=\"editableDiv\"\n            onInput={newhandleChange}\n            // onChange={newhandleChange}\n            value={previewContent}\n            style={{ width: 500, height: 400 }}\n\n            // dangerouslySetInnerHTML={{ __html: previewContent }}\n          >\n            {/* <div dangerouslySetInnerHTML={{ __html: previewContent }}></div> */}\n            <code className={`language-${dataType}`}>{previewContent}</code>\n            {/* {previewContent} */}\n          </pre>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}