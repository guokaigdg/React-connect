{"ast":null,"code":"import _slicedToArray from \"/Users/guokai/Desktop/React-connect/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/guokai/Desktop/React-connect/src/Prism/Okadia/index.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\nimport \"../CodeTheme/Okadia.css\"; // import \"../CodeTheme/Solarized.css\";\n\nfunction App() {\n  const _useState = useState(\"js\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        dataType = _useState2[0],\n        setDataType = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        previewContent = _useState4[0],\n        setPreviewContent = _useState4[1]; // const [newContent, setnewContent] = useState(\"\");\n\n\n  const handleChange = e => {\n    console.log(e);\n    setPreviewContent(`${e.target.value}`);\n  };\n\n  const newhandleChange = () => {\n    let element = document.getElementById(\"editableDiv\"); // let x = document.getElementById(\"editableDiv\").isContentEditable;\n\n    console.log(element.innerHTML); // console.log(x);\n\n    setPreviewContent(element.innerHTML);\n  };\n\n  const handleChangeTypeJS = () => {\n    setDataType(`js`);\n  };\n\n  const handleChangeTypeCSS = () => {\n    setDataType(`css`);\n  };\n\n  const handleChangeTypeC = () => {\n    setDataType(\"c\");\n  };\n\n  useEffect(() => {\n    setTimeout(() => Prism.highlightAll(), 0);\n  });\n\n  const handleSelectChange = e => {\n    setDataType(`${e.target.value}`);\n  };\n\n  const js = `\n    const getLoader = require('prismjs/dependencies');\n    const components = require('prismjs/components');\n  `;\n  return React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handleChangeTypeJS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"JavaScript\"), React.createElement(\"button\", {\n    onClick: handleChangeTypeCSS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"CSS\"), React.createElement(\"button\", {\n    onClick: handleChangeTypeC,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"C++\"), \"\\xA0 \\u2002 \\u2003 \\u2002 \\u2003 \\xA0 \\u2002 \\u2003\", React.createElement(\"select\", {\n    name: \"type\",\n    onChange: handleSelectChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"js\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"JavaScript\"), React.createElement(\"option\", {\n    value: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"CSS\"), React.createElement(\"option\", {\n    value: \"c++\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"C++\")))), React.createElement(\"textarea\", {\n    value: previewContent,\n    placeholder: \"\\u8F93\\u5165\\u4EE3\\u7801...\",\n    type: \"text\",\n    onChange: handleChange,\n    style: {\n      width: \"500px\",\n      height: \"100%\",\n      backgroundColor: \"#f8f8f2\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      width: \"500px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"\\u6B63\\u5E38\\u7ED3\\u679C\\u533A:\"), previewContent)), React.createElement(\"button\", {\n    onClick: newhandleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"click\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"\\u4EE3\\u7801\\u533A:\", dataType), React.createElement(\"div\", {\n    contentEditable: \"plaintext-only\",\n    id: \"editableDiv\" //  onInput={newhandleChange}\n    ,\n    onChange: newhandleChange,\n    value: previewContent,\n    style: {\n      width: 500,\n      height: 200,\n      borderColor: \"pink\",\n      borderRadius: 5,\n      border: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      width: 500,\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"pre\", {\n    // contentEditable=\"true\"\n    contentEditable: \"plaintext-only\",\n    id: \"editableDiv\" //  onInput={newhandleChange}\n    ,\n    onChange: newhandleChange,\n    value: previewContent // className=\"line-numbers\"\n    ,\n    style: {\n      width: 500,\n      height: \"100%\"\n    } // dangerouslySetInnerHTML={{ __html: previewContent }}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    className: `language-${dataType}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, previewContent))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"pre\", {\n    className: \"line-numbers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    className: \"language-js\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, js.trim())), React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    className: \"language-css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, `p { color: red }`)))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/guokai/Desktop/React-connect/src/Prism/Okadia/index.jsx"],"names":["React","useState","useEffect","Prism","App","dataType","setDataType","previewContent","setPreviewContent","handleChange","e","console","log","target","value","newhandleChange","element","document","getElementById","innerHTML","handleChangeTypeJS","handleChangeTypeCSS","handleChangeTypeC","setTimeout","highlightAll","handleSelectChange","js","display","width","height","backgroundColor","borderColor","borderRadius","border","trim"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\nimport \"../CodeTheme/Okadia.css\";\n// import \"../CodeTheme/Solarized.css\";\n\nfunction App() {\n  const [dataType, setDataType] = useState(\"js\");\n  const [previewContent, setPreviewContent] = useState(\"\");\n  // const [newContent, setnewContent] = useState(\"\");\n\n  const handleChange = e => {\n    console.log(e);\n    setPreviewContent(`${e.target.value}`);\n  };\n  const newhandleChange = () => {\n    let element = document.getElementById(\"editableDiv\");\n    // let x = document.getElementById(\"editableDiv\").isContentEditable;\n    console.log(element.innerHTML);\n    // console.log(x);\n    setPreviewContent(element.innerHTML);\n  };\n  const handleChangeTypeJS = () => {\n    setDataType(`js`);\n  };\n  const handleChangeTypeCSS = () => {\n    setDataType(`css`);\n  };\n  const handleChangeTypeC = () => {\n    setDataType(\"c\");\n  };\n  useEffect(() => {\n    setTimeout(() => Prism.highlightAll(), 0);\n  });\n  const handleSelectChange = e => {\n    setDataType(`${e.target.value}`);\n  };\n\n  const js = `\n    const getLoader = require('prismjs/dependencies');\n    const components = require('prismjs/components');\n  `;\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      {/* -----------------代码input区------------------ */}\n      <div>\n        <div>\n          <ul>\n            <button onClick={handleChangeTypeJS}>JavaScript</button>\n            <button onClick={handleChangeTypeCSS}>CSS</button>\n            <button onClick={handleChangeTypeC}>C++</button>\n            &nbsp; &ensp; &emsp; &ensp; &emsp; &nbsp; &ensp; &emsp;\n            <select name=\"type\" onChange={handleSelectChange}>\n              <option value=\"js\">JavaScript</option>\n              <option value=\"css\">CSS</option>\n              <option value=\"c++\">C++</option>\n            </select>\n          </ul>\n        </div>\n        <textarea\n          value={previewContent}\n          placeholder=\"输入代码...\"\n          type=\"text\"\n          onChange={handleChange}\n          style={{\n            width: \"500px\",\n            height: \"100%\",\n            backgroundColor: \"#f8f8f2\"\n          }}\n        />\n        <div\n          style={{\n            width: \"500px\"\n          }}\n        >\n          <div>正常结果区:</div>\n          {previewContent}\n        </div>\n      </div>\n      {/* -----------------代码view区------------------ */}\n      <button onClick={newhandleChange}>click</button>\n      <div>\n        <ul>代码区:{dataType}</ul>\n        <div\n          contentEditable=\"plaintext-only\"\n          id=\"editableDiv\"\n          //  onInput={newhandleChange}\n          onChange={newhandleChange}\n          value={previewContent}\n          style={{\n            width: 500,\n            height: 200,\n            borderColor: \"pink\",\n            borderRadius: 5,\n            border: \"red\"\n          }}\n        ></div>\n        <div style={{ width: 500, height: \"100%\" }}>\n          <pre\n            // contentEditable=\"true\"\n            contentEditable=\"plaintext-only\"\n            id=\"editableDiv\"\n            //  onInput={newhandleChange}\n            onChange={newhandleChange}\n            value={previewContent}\n            // className=\"line-numbers\"\n            style={{ width: 500, height: \"100%\" }}\n\n            // dangerouslySetInnerHTML={{ __html: previewContent }}\n          >\n            <code className={`language-${dataType}`}>{previewContent}</code>\n            {/* {previewContent} */}\n          </pre>\n        </div>\n        <div>\n          <pre className=\"line-numbers\">\n            <code className=\"language-js\">{js.trim()}</code>\n          </pre>\n          <pre>\n            <code className=\"language-css\">{`p { color: red }`}</code>\n          </pre>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}