{"ast":null,"code":"import _slicedToArray from \"/Users/guokai/Desktop/React-connect/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/guokai/Desktop/React-connect/src/Prism/Okadia/index.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\nimport \"../CodeTheme/Okadia.css\"; // import \"../CodeTheme/Solarized.css\";\n\nfunction App() {\n  const _useState = useState(\"js\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        dataType = _useState2[0],\n        setDataType = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        previewContent = _useState4[0],\n        setPreviewContent = _useState4[1]; // const [newContent, setnewContent] = useState(\"\");\n\n\n  const handleChange = e => {\n    console.log(e);\n    setPreviewContent(`${e.target.value}`);\n  };\n\n  const onDivInput = e => {\n    console.log(e); // setPreviewContent(`${e.target.value}`);\n  };\n\n  const handleChangeTypeJS = () => {\n    setDataType(`js`);\n  };\n\n  const handleChangeTypeCSS = () => {\n    setDataType(`css`);\n  };\n\n  const handleChangeTypeC = () => {\n    setDataType(\"c\");\n  };\n\n  useEffect(() => {\n    setTimeout(() => Prism.highlightAll(), 0);\n  });\n\n  const handleSelectChange = e => {\n    setDataType(`${e.target.value}`);\n  };\n\n  const js = `\nconst getLoader = require('prismjs/dependencies');\nconst components = require('prismjs/components');\nconst componentsToLoad = ['markup', 'css', 'php'];\nconst loadedComponents = ['clike', 'javascript'];\nconst loader = getLoader(components, componentsToLoad, loadedComponents);\n  `; // function View() {\n  //   return (\n  //     <div style={{ width: 500, height: 600 }}>\n  //       <pre className=\"line-numbers\" style={{ width: 500, height: 600 }}>\n  //         <code className={`language-${dataType}`}>{previewContent}</code>\n  //       </pre>\n  //     </div>\n  //   );\n  // }\n\n  const test = () => {\n    this.setState({\n      add: this.refs.add.innerHTML\n    });\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handleChangeTypeJS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"JavaScript\"), React.createElement(\"button\", {\n    onClick: handleChangeTypeCSS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"CSS\"), React.createElement(\"button\", {\n    onClick: handleChangeTypeC,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"C++\"), \"\\xA0 \\u2002 \\u2003 \\u2002 \\u2003 \\xA0 \\u2002 \\u2003\", React.createElement(\"select\", {\n    name: \"type\",\n    onChange: handleSelectChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"js\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"JavaScript\"), React.createElement(\"option\", {\n    value: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"CSS\"), React.createElement(\"option\", {\n    value: \"c++\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"C++\")))), React.createElement(\"textarea\", {\n    value: previewContent,\n    placeholder: \"\\u8F93\\u5165\\u4EE3\\u7801...\",\n    type: \"text\",\n    onChange: handleChange,\n    style: {\n      width: \"500px\",\n      height: \"100%\",\n      backgroundColor: \"#f8f8f2\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      width: \"500px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"\\u6B63\\u5E38\\u7ED3\\u679C\\u533A:\"), previewContent)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"\\u4EE3\\u7801\\u533A:\", dataType), React.createElement(\"div\", {\n    style: {\n      width: 500,\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"pre\", {\n    contentEditable: \"true\",\n    input: onDivInput // onChange={newhandleChange}\n    ,\n    value: previewContent,\n    className: \"line-numbers\",\n    style: {\n      width: 500,\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    className: `language-${dataType}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, previewContent))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"pre\", {\n    className: \"line-numbers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    className: \"language-js\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, js.trim())), React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    className: \"language-css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, `p { color: red }`)))), \"\\u3000\", React.createElement(\"div\", {\n    ref: \"add\",\n    contenteditable: \"true\",\n    className: styles.areaBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: e => {\n      this.test(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    contenteditable: \"true\",\n    dangerouslySetInnerHTML: {\n      __html: `${this.state.add}`\n    },\n    className: styles.areaBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/guokai/Desktop/React-connect/src/Prism/Okadia/index.jsx"],"names":["React","useState","useEffect","Prism","App","dataType","setDataType","previewContent","setPreviewContent","handleChange","e","console","log","target","value","onDivInput","handleChangeTypeJS","handleChangeTypeCSS","handleChangeTypeC","setTimeout","highlightAll","handleSelectChange","js","test","setState","add","refs","innerHTML","display","width","height","backgroundColor","trim","styles","areaBox","__html","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\nimport \"../CodeTheme/Okadia.css\";\n// import \"../CodeTheme/Solarized.css\";\n\nfunction App() {\n  const [dataType, setDataType] = useState(\"js\");\n  const [previewContent, setPreviewContent] = useState(\"\");\n  // const [newContent, setnewContent] = useState(\"\");\n\n  const handleChange = e => {\n    console.log(e);\n    setPreviewContent(`${e.target.value}`);\n  };\n  const onDivInput = e => {\n    console.log(e);\n    // setPreviewContent(`${e.target.value}`);\n  };\n  const handleChangeTypeJS = () => {\n    setDataType(`js`);\n  };\n  const handleChangeTypeCSS = () => {\n    setDataType(`css`);\n  };\n  const handleChangeTypeC = () => {\n    setDataType(\"c\");\n  };\n  useEffect(() => {\n    setTimeout(() => Prism.highlightAll(), 0);\n  });\n  const handleSelectChange = e => {\n    setDataType(`${e.target.value}`);\n  };\n\n  const js = `\nconst getLoader = require('prismjs/dependencies');\nconst components = require('prismjs/components');\nconst componentsToLoad = ['markup', 'css', 'php'];\nconst loadedComponents = ['clike', 'javascript'];\nconst loader = getLoader(components, componentsToLoad, loadedComponents);\n  `;\n  // function View() {\n  //   return (\n  //     <div style={{ width: 500, height: 600 }}>\n  //       <pre className=\"line-numbers\" style={{ width: 500, height: 600 }}>\n  //         <code className={`language-${dataType}`}>{previewContent}</code>\n  //       </pre>\n  //     </div>\n  //   );\n  // }\n  const test = () => {\n    this.setState({\n      add: this.refs.add.innerHTML\n    });\n  };\n  return (\n    <div style={{ display: \"flex\" }}>\n      {/* -----------------代码input区------------------ */}\n      <div>\n        <div>\n          <ul>\n            <button onClick={handleChangeTypeJS}>JavaScript</button>\n            <button onClick={handleChangeTypeCSS}>CSS</button>\n            <button onClick={handleChangeTypeC}>C++</button>\n            &nbsp; &ensp; &emsp; &ensp; &emsp; &nbsp; &ensp; &emsp;\n            <select name=\"type\" onChange={handleSelectChange}>\n              <option value=\"js\">JavaScript</option>\n              <option value=\"css\">CSS</option>\n              <option value=\"c++\">C++</option>\n            </select>\n          </ul>\n        </div>\n        <textarea\n          value={previewContent}\n          placeholder=\"输入代码...\"\n          type=\"text\"\n          onChange={handleChange}\n          style={{\n            width: \"500px\",\n            height: \"100%\",\n            backgroundColor: \"#f8f8f2\"\n          }}\n        />\n        <div\n          style={{\n            width: \"500px\"\n          }}\n        >\n          <div>正常结果区:</div>\n          {previewContent}\n        </div>\n      </div>\n      {/* -----------------代码view区------------------ */}\n      <div>\n        <ul>代码区:{dataType}</ul>\n        <div style={{ width: 500, height: \"100%\" }}>\n          <pre\n            contentEditable=\"true\"\n            input={onDivInput}\n            // onChange={newhandleChange}\n            value={previewContent}\n            className=\"line-numbers\"\n            style={{ width: 500, height: \"100%\" }}\n          >\n            <code className={`language-${dataType}`}>{previewContent}</code>\n          </pre>\n        </div>\n        <div>\n          <pre className=\"line-numbers\">\n            <code className=\"language-js\">{js.trim()}</code>\n          </pre>\n          <pre>\n            <code className=\"language-css\">{`p { color: red }`}</code>\n          </pre>\n        </div>\n      </div>\n      　<div ref=\"add\" contenteditable=\"true\" className={styles.areaBox}></div>\n      <button\n        onClick={e => {\n          this.test(e);\n        }}\n      ></button>\n      <div\n        contenteditable=\"true\"\n        dangerouslySetInnerHTML={{ __html: `${this.state.add}` }}\n        className={styles.areaBox}\n      ></div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}