{"ast":null,"code":"import _slicedToArray from \"/Users/guokai/Desktop/React-connect/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/guokai/Desktop/React-connect/src/Prism/Okadia/index.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\nimport \"./Okadia.css\";\n\nfunction App() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        dataType = _useState2[0],\n        setDataType = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        previewContent = _useState4[0],\n        setPreviewContent = _useState4[1];\n\n  const handleChange = e => {\n    var x = document.getElementById(\"myInput\").value;\n    console.log(e);\n    setPreviewContent(e.target.value);\n  };\n\n  const handleChangeTypeJS = () => {\n    setDataType(`js`);\n  };\n\n  const handleChangeTypeCSS = () => {\n    setDataType(`css`);\n  };\n\n  const handleChangeTypeC = () => {\n    setDataType(\"c\");\n  };\n\n  useEffect(() => {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }, []);\n  return React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handleChangeTypeJS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"JavaScript\"), React.createElement(\"button\", {\n    onClick: handleChangeTypeCSS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"CSS\"), React.createElement(\"button\", {\n    onClick: handleChangeTypeC,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"C++\"))), React.createElement(\"div\", {\n    id: \"myInput\",\n    style: {\n      width: \"500px\",\n      height: \"100%\",\n      backgroundColor: \"#f8f8f2\"\n    },\n    onInput: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    value: previewContent,\n    placeholder: \"\\u8F93\\u5165\\u4EE3\\u7801...\",\n    onChange: handleChange,\n    style: {\n      width: \"500px\",\n      height: \"100%\",\n      backgroundColor: \"#f8f8f2\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"\\u4EE3\\u7801\\u533A:\", dataType), React.createElement(\"pre\", {\n    className: \"line-numbers\",\n    style: {\n      width: 500,\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    className: \"language-js\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: `<div >previewContent </div>`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: previewContent\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/guokai/Desktop/React-connect/src/Prism/Okadia/index.jsx"],"names":["React","useState","useEffect","Prism","App","dataType","setDataType","previewContent","setPreviewContent","handleChange","e","x","document","getElementById","value","console","log","target","handleChangeTypeJS","handleChangeTypeCSS","handleChangeTypeC","setTimeout","highlightAll","display","width","height","backgroundColor","__html"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\nimport \"./Okadia.css\";\n\nfunction App() {\n  const [dataType, setDataType] = useState(\"\");\n  const [previewContent, setPreviewContent] = useState(\"\");\n\n  const handleChange = e => {\n    var x = document.getElementById(\"myInput\").value;\n    console.log(e);\n    setPreviewContent(e.target.value);\n  };\n  const handleChangeTypeJS = () => {\n    setDataType(`js`);\n  };\n  const handleChangeTypeCSS = () => {\n    setDataType(`css`);\n  };\n  const handleChangeTypeC = () => {\n    setDataType(\"c\");\n  };\n  useEffect(() => {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }, []);\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      {/* -----------------代码input区------------------ */}\n      <div>\n        <div>\n          <ul>\n            <button onClick={handleChangeTypeJS}>JavaScript</button>\n            <button onClick={handleChangeTypeCSS}>CSS</button>\n            <button onClick={handleChangeTypeC}>C++</button>\n          </ul>\n        </div>\n        <div\n          id=\"myInput\"\n          style={{\n            width: \"500px\",\n            height: \"100%\",\n            backgroundColor: \"#f8f8f2\"\n          }}\n          onInput={handleChange}\n        ></div>\n\n        <input\n          value={previewContent}\n          placeholder=\"输入代码...\"\n          onChange={handleChange}\n          style={{\n            width: \"500px\",\n            height: \"100%\",\n            backgroundColor: \"#f8f8f2\"\n          }}\n        ></input>\n      </div>\n      {/* -----------------代码view区------------------ */}\n      <div>\n        <ul>代码区:{dataType}</ul>\n        <pre className=\"line-numbers\" style={{ width: 500, height: \"100%\" }}>\n          <code className=\"language-js\">\n            <div\n              dangerouslySetInnerHTML={{\n                __html: `<div >previewContent </div>`\n              }}\n            ></div>\n          </code>\n        </pre>\n      </div>\n\n      <div dangerouslySetInnerHTML={{ __html: previewContent }}></div>\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}