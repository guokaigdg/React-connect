{"ast":null,"code":"import _slicedToArray from \"/Users/guokai/Desktop/React-connect/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/guokai/Desktop/React-connect/src/Prism/Okadia/index.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport marked from \"marked\";\nimport highlight from \"highlight.js\";\nimport Prism from \"prismjs\";\nimport \"../CodeTheme/Okadia.css\"; // import \"../CodeTheme/Solarized.css\";\n\nhighlight.configure({\n  tabReplace: \"  \",\n  classPrefix: \"hljs-\",\n  languages: [\"CSS\", \"HTML, XML\", \"JavaScript\", \"PHP\", \"Python\", \"Stylus\", \"TypeScript\", \"Markdown\"]\n});\nmarked.setOptions({\n  highlight(code) {\n    return highlight.highlightAuto(code).value;\n  }\n\n});\n\nfunction App() {\n  const _useState = useState(\"js\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        dataType = _useState2[0],\n        setDataType = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        previewContent = _useState4[0],\n        setPreviewContent = _useState4[1]; // const [newContent, setnewContent] = useState(\"\");\n\n\n  const handleChange = e => {\n    console.log(e);\n    setPreviewContent(`${e.target.value}`);\n  };\n\n  const newhandleChange = e => {\n    // let element = document.getElementById(\"editableDiv\");\n    // let x = document.getElementById(\"editableDiv\").isContentEditable;\n    // console.log(element.innerHTML);\n    console.log(e.target.innerText); // console.log(x);\n\n    setPreviewContent(e.target.innerText);\n  };\n\n  const handleChangeTypeJS = () => {\n    setDataType(`js`);\n  };\n\n  const handleChangeTypeCSS = () => {\n    setDataType(`css`);\n  };\n\n  const handleChangeTypeC = () => {\n    setDataType(\"c\");\n  };\n\n  useEffect(() => {\n    setTimeout(() => Prism.highlightAll(), 0);\n  });\n\n  const handleSelectChange = e => {\n    setDataType(`${e.target.value}`);\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handleChangeTypeJS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"JavaScript\"), React.createElement(\"button\", {\n    onClick: handleChangeTypeCSS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"CSS\"), React.createElement(\"button\", {\n    onClick: handleChangeTypeC,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"C++\"), \"\\xA0 \\u2002 \\u2003 \\u2002 \\u2003 \\xA0 \\u2002 \\u2003\", React.createElement(\"select\", {\n    name: \"type\",\n    onChange: handleSelectChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"js\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"JavaScript\"), React.createElement(\"option\", {\n    value: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"CSS\"), React.createElement(\"option\", {\n    value: \"c++\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"C++\")))), React.createElement(\"textarea\", {\n    value: previewContent,\n    placeholder: \"\\u8F93\\u5165\\u4EE3\\u7801...\",\n    type: \"text\",\n    onChange: handleChange,\n    style: {\n      width: \"500px\",\n      height: \"100%\",\n      backgroundColor: \"#f8f8f2\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      width: \"500px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"\\u6B63\\u5E38\\u7ED3\\u679C\\u533A:\"), previewContent)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"editor-main-a\" // ref={node => (this.aceBox = node)}\n    // style={{ height: state.aceBoxH }}\n    // key=\"main\"\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: 500,\n      height: 400\n    },\n    className: \"common-container editor-container\" // onMouseOver={this.setCurrentIndex.bind(this, 1)}\n    //   onScroll={this.containerScroll}\n    // ref={node => (this.editContainer = node)}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    contentEditable: \"plaintext-only\",\n    name: \"editor-wrapper\",\n    id: \"editor-wrapper\",\n    className: \"common-wrapper editor-wrapper\",\n    onInput: newhandleChange // ref={node => (this.editWrap = node)}\n    ,\n    dangerouslySetInnerHTML: {\n      __html: previewContent\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/guokai/Desktop/React-connect/src/Prism/Okadia/index.jsx"],"names":["React","useState","useEffect","marked","highlight","Prism","configure","tabReplace","classPrefix","languages","setOptions","code","highlightAuto","value","App","dataType","setDataType","previewContent","setPreviewContent","handleChange","e","console","log","target","newhandleChange","innerText","handleChangeTypeJS","handleChangeTypeCSS","handleChangeTypeC","setTimeout","highlightAll","handleSelectChange","display","width","height","backgroundColor","__html"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,yBAAP,C,CACA;;AAEAD,SAAS,CAACE,SAAV,CAAoB;AAClBC,EAAAA,UAAU,EAAE,IADM;AAElBC,EAAAA,WAAW,EAAE,OAFK;AAGlBC,EAAAA,SAAS,EAAE,CACT,KADS,EAET,WAFS,EAGT,YAHS,EAIT,KAJS,EAKT,QALS,EAMT,QANS,EAOT,YAPS,EAQT,UARS;AAHO,CAApB;AAcAN,MAAM,CAACO,UAAP,CAAkB;AAChBN,EAAAA,SAAS,CAACO,IAAD,EAAO;AACd,WAAOP,SAAS,CAACQ,aAAV,CAAwBD,IAAxB,EAA8BE,KAArC;AACD;;AAHe,CAAlB;;AAKA,SAASC,GAAT,GAAe;AAAA,oBACmBb,QAAQ,CAAC,IAAD,CAD3B;AAAA;AAAA,QACNc,QADM;AAAA,QACIC,WADJ;;AAAA,qBAE+Bf,QAAQ,CAAC,EAAD,CAFvC;AAAA;AAAA,QAENgB,cAFM;AAAA,QAEUC,iBAFV,kBAGb;;;AAEA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAF,IAAAA,iBAAiB,CAAE,GAAEE,CAAC,CAACG,MAAF,CAASV,KAAM,EAAnB,CAAjB;AACD,GAHD;;AAIA,QAAMW,eAAe,GAAGJ,CAAC,IAAI;AAC3B;AACA;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASE,SAArB,EAJ2B,CAK3B;;AACAP,IAAAA,iBAAiB,CAACE,CAAC,CAACG,MAAF,CAASE,SAAV,CAAjB;AACD,GAPD;;AAQA,QAAMC,kBAAkB,GAAG,MAAM;AAC/BV,IAAAA,WAAW,CAAE,IAAF,CAAX;AACD,GAFD;;AAGA,QAAMW,mBAAmB,GAAG,MAAM;AAChCX,IAAAA,WAAW,CAAE,KAAF,CAAX;AACD,GAFD;;AAGA,QAAMY,iBAAiB,GAAG,MAAM;AAC9BZ,IAAAA,WAAW,CAAC,GAAD,CAAX;AACD,GAFD;;AAGAd,EAAAA,SAAS,CAAC,MAAM;AACd2B,IAAAA,UAAU,CAAC,MAAMxB,KAAK,CAACyB,YAAN,EAAP,EAA6B,CAA7B,CAAV;AACD,GAFQ,CAAT;;AAGA,QAAMC,kBAAkB,GAAGX,CAAC,IAAI;AAC9BJ,IAAAA,WAAW,CAAE,GAAEI,CAAC,CAACG,MAAF,CAASV,KAAM,EAAnB,CAAX;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,KAAK,EAAE;AAAEmB,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEN,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAQ,IAAA,OAAO,EAAEC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAGE;AAAQ,IAAA,OAAO,EAAEC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,yDAKE;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAEG,kBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAGE;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,CALF,CADF,CADF,EAcE;AACE,IAAA,KAAK,EAAEd,cADT;AAEE,IAAA,WAAW,EAAC,6BAFd;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,QAAQ,EAAEE,YAJZ;AAKE,IAAA,KAAK,EAAE;AACLc,MAAAA,KAAK,EAAE,OADF;AAELC,MAAAA,MAAM,EAAE,MAFH;AAGLC,MAAAA,eAAe,EAAE;AAHZ,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAyBE;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,KAAK,EAAE;AADF,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCALF,EAMGhB,cANH,CAzBF,CAFF,EAsCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmCE;AACE,IAAA,SAAS,EAAC,eADZ,CAEE;AACA;AACA;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AACE,IAAA,KAAK,EAAE;AAAEgB,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KADT;AAEE,IAAA,SAAS,EAAC,mCAFZ,CAGE;AACA;AACA;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AACE,IAAA,eAAe,EAAC,gBADlB;AAEE,IAAA,IAAI,EAAC,gBAFP;AAGE,IAAA,EAAE,EAAC,gBAHL;AAIE,IAAA,SAAS,EAAC,+BAJZ;AAKE,IAAA,OAAO,EAAEV,eALX,CAME;AANF;AAOE,IAAA,uBAAuB,EAAE;AAAEY,MAAAA,MAAM,EAAEnB;AAAV,KAP3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAPF,CAnCF,CAtCF,CADF;AAsGD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport marked from \"marked\";\nimport highlight from \"highlight.js\";\nimport Prism from \"prismjs\";\nimport \"../CodeTheme/Okadia.css\";\n// import \"../CodeTheme/Solarized.css\";\n\nhighlight.configure({\n  tabReplace: \"  \",\n  classPrefix: \"hljs-\",\n  languages: [\n    \"CSS\",\n    \"HTML, XML\",\n    \"JavaScript\",\n    \"PHP\",\n    \"Python\",\n    \"Stylus\",\n    \"TypeScript\",\n    \"Markdown\"\n  ]\n});\nmarked.setOptions({\n  highlight(code) {\n    return highlight.highlightAuto(code).value;\n  }\n});\nfunction App() {\n  const [dataType, setDataType] = useState(\"js\");\n  const [previewContent, setPreviewContent] = useState(\"\");\n  // const [newContent, setnewContent] = useState(\"\");\n\n  const handleChange = e => {\n    console.log(e);\n    setPreviewContent(`${e.target.value}`);\n  };\n  const newhandleChange = e => {\n    // let element = document.getElementById(\"editableDiv\");\n    // let x = document.getElementById(\"editableDiv\").isContentEditable;\n    // console.log(element.innerHTML);\n    console.log(e.target.innerText);\n    // console.log(x);\n    setPreviewContent(e.target.innerText);\n  };\n  const handleChangeTypeJS = () => {\n    setDataType(`js`);\n  };\n  const handleChangeTypeCSS = () => {\n    setDataType(`css`);\n  };\n  const handleChangeTypeC = () => {\n    setDataType(\"c\");\n  };\n  useEffect(() => {\n    setTimeout(() => Prism.highlightAll(), 0);\n  });\n  const handleSelectChange = e => {\n    setDataType(`${e.target.value}`);\n  };\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      {/* -----------------代码input区------------------ */}\n      <div>\n        <div>\n          <ul>\n            <button onClick={handleChangeTypeJS}>JavaScript</button>\n            <button onClick={handleChangeTypeCSS}>CSS</button>\n            <button onClick={handleChangeTypeC}>C++</button>\n            &nbsp; &ensp; &emsp; &ensp; &emsp; &nbsp; &ensp; &emsp;\n            <select name=\"type\" onChange={handleSelectChange}>\n              <option value=\"js\">JavaScript</option>\n              <option value=\"css\">CSS</option>\n              <option value=\"c++\">C++</option>\n            </select>\n          </ul>\n        </div>\n        <textarea\n          value={previewContent}\n          placeholder=\"输入代码...\"\n          type=\"text\"\n          onChange={handleChange}\n          style={{\n            width: \"500px\",\n            height: \"100%\",\n            backgroundColor: \"#f8f8f2\"\n          }}\n        />\n        <div\n          style={{\n            width: \"500px\"\n          }}\n        >\n          <div>正常结果区:</div>\n          {previewContent}\n        </div>\n      </div>\n      {/* -----------------代码view区------------------ */}\n      {/* <button onClick={newhandleChange}>click</button> */}\n      <div>\n        {/* <ul>代码区:{dataType}</ul> */}\n        {/* <div\n          contentEditable=\"plaintext-only\"\n          id=\"editableDiv\"\n          //  onInput={newhandleChange}\n          onChange={newhandleChange}\n          value={previewContent}\n          style={{\n            width: 500,\n            height: 200,\n            borderColor: \"pink\"\n          }}\n        ></div> */}\n        {/* <div style={{ width: 500, height: 400 }}>\n          <pre\n            // contentEditable=\"true\"\n            contentEditable=\"plaintext-only\"\n            id=\"editableDiv\"\n            onInput={newhandleChange}\n            // onChange={newhandleChange}\n            value={previewContent}\n            style={{ width: 500, height: 400 }}\n            // className={`language-${dataType}`}\n          > */}\n        {/* <div\n              className={`language-${dataType}`}\n              dangerouslySetInnerHTML={{ __html: previewContent }}\n            ></div> */}\n        {/* <div className={`language-${dataType}`}>{previewContent}</div> */}\n        {/* {previewContent}\n          </pre>\n        </div> */}\n\n        {/* ---------------- */}\n        <div\n          className=\"editor-main-a\"\n          // ref={node => (this.aceBox = node)}\n          // style={{ height: state.aceBoxH }}\n          // key=\"main\"\n        >\n          {/* //---------------------------------------editor------------------- */}\n          <div\n            style={{ width: 500, height: 400 }}\n            className=\"common-container editor-container\"\n            // onMouseOver={this.setCurrentIndex.bind(this, 1)}\n            //   onScroll={this.containerScroll}\n            // ref={node => (this.editContainer = node)}\n          >\n            <div\n              contentEditable=\"plaintext-only\"\n              name=\"editor-wrapper\"\n              id=\"editor-wrapper\"\n              className=\"common-wrapper editor-wrapper\"\n              onInput={newhandleChange}\n              // ref={node => (this.editWrap = node)}\n              dangerouslySetInnerHTML={{ __html: previewContent }}\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}