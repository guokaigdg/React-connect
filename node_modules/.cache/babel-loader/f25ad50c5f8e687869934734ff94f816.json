{"ast":null,"code":"import _slicedToArray from \"/Users/guokai/Desktop/React-connect/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/guokai/Desktop/React-connect/src/Prism/Okadia/index.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\nimport marked from \"marked\";\nimport \"./Okadia.css\";\n\nfunction App() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        dataType = _useState2[0],\n        setDataType = _useState2[1];\n\n  const _useState3 = useState(\"\" // `import react from \"react\"\n  //   123 eede\n  // `\n  ),\n        _useState4 = _slicedToArray(_useState3, 2),\n        previewContent = _useState4[0],\n        setPreviewContent = _useState4[1];\n\n  const handleChange = e => {\n    // var x = document.getElementById(\"myInput\").value;\n    console.log(e);\n    setPreviewContent(`${e.target.value}`); // setPreviewContent(marked(x));\n\n    {\n      React.createElement(\"pre\", {\n        className: \"line-numbers\",\n        style: {\n          width: 500,\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        className: \"language-js\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, `${previewContent}`));\n    }\n  };\n\n  const handleChangeTypeJS = () => {\n    setDataType(`js`);\n  };\n\n  const handleChangeTypeCSS = () => {\n    setDataType(`css`);\n  };\n\n  const handleChangeTypeC = () => {\n    setDataType(\"c\");\n  };\n\n  useEffect(() => {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }, []);\n  return React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handleChangeTypeJS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"JavaScript\"), React.createElement(\"button\", {\n    onClick: handleChangeTypeCSS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"CSS\"), React.createElement(\"button\", {\n    onClick: handleChangeTypeC,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"C++\"))), React.createElement(\"input\", {\n    value: previewContent,\n    placeholder: \"\\u8F93\\u5165\\u4EE3\\u7801...\",\n    onChange: handleChange,\n    style: {\n      width: \"500px\",\n      height: \"100%\",\n      backgroundColor: \"#f8f8f2\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"\\u4EE3\\u7801\\u533A:\", dataType)));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/guokai/Desktop/React-connect/src/Prism/Okadia/index.jsx"],"names":["React","useState","useEffect","Prism","marked","App","dataType","setDataType","previewContent","setPreviewContent","handleChange","e","console","log","target","value","width","height","handleChangeTypeJS","handleChangeTypeCSS","handleChangeTypeC","setTimeout","highlightAll","display","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,cAAP;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACmBJ,QAAQ,CAAC,EAAD,CAD3B;AAAA;AAAA,QACNK,QADM;AAAA,QACIC,WADJ;;AAAA,qBAE+BN,QAAQ,CAClD,EADkD,CAElD;AACA;AACA;AAJkD,GAFvC;AAAA;AAAA,QAENO,cAFM;AAAA,QAEUC,iBAFV;;AASb,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAF,IAAAA,iBAAiB,CAAE,GAAEE,CAAC,CAACG,MAAF,CAASC,KAAM,EAAnB,CAAjB,CAHwB,CAIxB;;AACA;AACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,MAAM,EAAE;AAAtB,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,GAAET,cAAe,EAFrB,CADF;AAQD;AACF,GAfD;;AAgBA,QAAMU,kBAAkB,GAAG,MAAM;AAC/BX,IAAAA,WAAW,CAAE,IAAF,CAAX;AACD,GAFD;;AAGA,QAAMY,mBAAmB,GAAG,MAAM;AAChCZ,IAAAA,WAAW,CAAE,KAAF,CAAX;AACD,GAFD;;AAGA,QAAMa,iBAAiB,GAAG,MAAM;AAC9Bb,IAAAA,WAAW,CAAC,GAAD,CAAX;AACD,GAFD;;AAGAL,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,UAAU,CAAC,MAAMlB,KAAK,CAACmB,YAAN,EAAP,EAA6B,CAA7B,CAAV;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEL,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAQ,IAAA,OAAO,EAAEC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAGE;AAAQ,IAAA,OAAO,EAAEC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,CADF,CADF,EAqBE;AACE,IAAA,KAAK,EAAEZ,cADT;AAEE,IAAA,WAAW,EAAC,6BAFd;AAGE,IAAA,QAAQ,EAAEE,YAHZ;AAIE,IAAA,KAAK,EAAE;AACLM,MAAAA,KAAK,EAAE,OADF;AAELC,MAAAA,MAAM,EAAE,MAFH;AAGLO,MAAAA,eAAe,EAAE;AAHZ,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CAFF,EAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAASlB,QAAT,CADF,CAnCF,CADF;AAyCD;;AACD,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\nimport marked from \"marked\";\nimport \"./Okadia.css\";\n\nfunction App() {\n  const [dataType, setDataType] = useState(\"\");\n  const [previewContent, setPreviewContent] = useState(\n    \"\"\n    // `import react from \"react\"\n    //   123 eede\n    // `\n  );\n\n  const handleChange = e => {\n    // var x = document.getElementById(\"myInput\").value;\n    console.log(e);\n    setPreviewContent(`${e.target.value}`);\n    // setPreviewContent(marked(x));\n    {\n      <pre className=\"line-numbers\" style={{ width: 500, height: \"100%\" }}>\n        <code className=\"language-js\">\n          {/* <div dangerouslySetInnerHTML={{ __html: previewContent }}></div> */}\n          {`${previewContent}`}\n          {/* {previewContent} */}\n          {/* import react from \"ddd\" */}\n        </code>\n      </pre>;\n    }\n  };\n  const handleChangeTypeJS = () => {\n    setDataType(`js`);\n  };\n  const handleChangeTypeCSS = () => {\n    setDataType(`css`);\n  };\n  const handleChangeTypeC = () => {\n    setDataType(\"c\");\n  };\n  useEffect(() => {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }, []);\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      {/* -----------------代码input区------------------ */}\n      <div>\n        <div>\n          <ul>\n            <button onClick={handleChangeTypeJS}>JavaScript</button>\n            <button onClick={handleChangeTypeCSS}>CSS</button>\n            <button onClick={handleChangeTypeC}>C++</button>\n          </ul>\n        </div>\n\n        {/* <div\n          type=\"input\"\n          id=\"myInput\"\n          style={{\n            width: \"500px\",\n            height: \"100%\",\n            backgroundColor: \"#f8f8f2\"\n          }}\n          onInput={handleChange}\n          dangerouslySetInnerHTML={{ __html: previewContent }}\n        /> */}\n\n        <input\n          value={previewContent}\n          placeholder=\"输入代码...\"\n          onChange={handleChange}\n          style={{\n            width: \"500px\",\n            height: \"100%\",\n            backgroundColor: \"#f8f8f2\"\n          }}\n        ></input>\n      </div>\n      {/* -----------------代码view区------------------ */}\n      <div>\n        <ul>代码区:{dataType}</ul>\n      </div>\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}