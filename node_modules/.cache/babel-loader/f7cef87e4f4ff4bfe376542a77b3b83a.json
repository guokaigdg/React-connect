{"ast":null,"code":"import _slicedToArray from \"/Users/guokai/Desktop/React-connect/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/guokai/Desktop/React-connect/src/Prism/Okadia/index.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\nimport marked from \"marked\";\nimport \"./Okadia.css\";\nmarked.setOptions({\n  highlight(code) {\n    return highlight.highlightAuto(code).value;\n  }\n\n});\n\nfunction App() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        dataType = _useState2[0],\n        setDataType = _useState2[1];\n\n  const _useState3 = useState( // `import react from \"react\"\n  //   123 eede\n  // `\n  ``),\n        _useState4 = _slicedToArray(_useState3, 2),\n        previewContent = _useState4[0],\n        setPreviewContent = _useState4[1];\n\n  const handleChange = e => {\n    // var x = document.getElementById(\"myInput\").value;\n    console.log(`${e.target.value}`);\n    setPreviewContent(`${e.target.value}`); // setPreviewContent(marked(x));\n  };\n\n  const handleChangeTypeJS = () => {\n    setDataType(`js`);\n  };\n\n  const handleChangeTypeCSS = () => {\n    setDataType(`css`);\n  };\n\n  const handleChangeTypeC = () => {\n    setDataType(\"c\");\n  };\n\n  useEffect(() => {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }, []);\n  const html = `\n      <div>\n        <ul>\n          <li>1</li>\n          <li>2</li>\n          <li>3</li>\n        </ul>\n      </div>\n  `;\n  return React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handleChangeTypeJS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"JavaScript\"), React.createElement(\"button\", {\n    onClick: handleChangeTypeCSS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"CSS\"), React.createElement(\"button\", {\n    onClick: handleChangeTypeC,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"C++\"))), React.createElement(\"textarea\", {\n    // rows=\"2\"\n    // cols=\"3\"\n    value: previewContent,\n    placeholder: \"\\u8F93\\u5165\\u4EE3\\u7801...\",\n    type: \"text\",\n    onChange: handleChange,\n    style: {\n      width: \"500px\",\n      height: \"100%\",\n      backgroundColor: \"#f8f8f2\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"\\u4EE3\\u7801\\u533A:\", dataType), React.createElement(\"pre\", {\n    className: \"line-numbers\",\n    style: {\n      width: 500,\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    className: \"language-js\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: marked(`${previewContent.toString()}`)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), previewContent)), React.createElement(\"pre\", {\n    className: \"line-numbers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    className: \"language-html line-numbers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, html.trim()))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/guokai/Desktop/React-connect/src/Prism/Okadia/index.jsx"],"names":["React","useState","useEffect","Prism","marked","setOptions","highlight","code","highlightAuto","value","App","dataType","setDataType","previewContent","setPreviewContent","handleChange","e","console","log","target","handleChangeTypeJS","handleChangeTypeCSS","handleChangeTypeC","setTimeout","highlightAll","html","display","width","height","backgroundColor","__html","toString","trim"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\nimport marked from \"marked\";\nimport \"./Okadia.css\";\n\nmarked.setOptions({\n  highlight(code) {\n    return highlight.highlightAuto(code).value;\n  }\n});\n\nfunction App() {\n  const [dataType, setDataType] = useState(\"\");\n  const [previewContent, setPreviewContent] = useState(\n    // `import react from \"react\"\n    //   123 eede\n    // `\n    ``\n  );\n\n  const handleChange = e => {\n    // var x = document.getElementById(\"myInput\").value;\n    console.log(`${e.target.value}`);\n    setPreviewContent(`${e.target.value}`);\n    // setPreviewContent(marked(x));\n  };\n  const handleChangeTypeJS = () => {\n    setDataType(`js`);\n  };\n  const handleChangeTypeCSS = () => {\n    setDataType(`css`);\n  };\n  const handleChangeTypeC = () => {\n    setDataType(\"c\");\n  };\n  useEffect(() => {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }, []);\n  const html = `\n      <div>\n        <ul>\n          <li>1</li>\n          <li>2</li>\n          <li>3</li>\n        </ul>\n      </div>\n  `;\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      {/* -----------------代码input区------------------ */}\n      <div>\n        <div>\n          <ul>\n            <button onClick={handleChangeTypeJS}>JavaScript</button>\n            <button onClick={handleChangeTypeCSS}>CSS</button>\n            <button onClick={handleChangeTypeC}>C++</button>\n          </ul>\n        </div>\n\n        {/* <div\n          type=\"input\"\n          id=\"myInput\"\n          style={{\n            width: \"500px\",\n            height: \"100%\",\n            backgroundColor: \"#f8f8f2\"\n          }}\n          onInput={handleChange}\n          dangerouslySetInnerHTML={{ __html: previewContent }}\n        /> */}\n\n        <textarea\n          // rows=\"2\"\n          // cols=\"3\"\n          value={previewContent}\n          placeholder=\"输入代码...\"\n          type=\"text\"\n          onChange={handleChange}\n          style={{\n            width: \"500px\",\n            height: \"100%\",\n            backgroundColor: \"#f8f8f2\"\n          }}\n        />\n      </div>\n      {/* -----------------代码view区------------------ */}\n      <div>\n        <ul>代码区:{dataType}</ul>\n        <pre className=\"line-numbers\" style={{ width: 500, height: \"100%\" }}>\n          <code className=\"language-js\">\n            {/* <div dangerouslySetInnerHTML={{ __html: previewContent }}></div> */}\n            <div\n              dangerouslySetInnerHTML={{\n                __html: marked(`${previewContent.toString()}`)\n              }}\n            ></div>\n            {/* <code className=\"language-html line-numbers\">{html.trim()}</code> */}\n            {previewContent}\n          </code>\n        </pre>\n        <pre className=\"line-numbers\">\n          {/* trim() 去掉两端多余空格 */}\n          <code className=\"language-html line-numbers\">{html.trim()}</code>\n        </pre>\n      </div>\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}